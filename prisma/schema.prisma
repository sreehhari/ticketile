// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  bookings  Booking[]
}

model TheaterOwner {
  id        Int      @id @default(autoincrement())
  ownerId   String   @unique
  password  String
  name      String
  theaters  Theater[]
}

model Theater {
  id        Int          @id @default(autoincrement())
  name      String
  location  String
  owner     TheaterOwner @relation(fields: [ownerId], references: [id])
  ownerId   Int
  movies    Movie[]
}

model Movie {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  releaseDate DateTime
  posterUrl   String?
  theater     Theater   @relation(fields: [theaterId], references: [id])
  theaterId   Int
  bookings    Booking[]
  status      MovieStatus @default(ACTIVE)
}

model Booking {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  movie     Movie    @relation(fields: [movieId], references: [id])
  movieId   Int
  bookedAt  DateTime @default(now())
  cancelled Boolean  @default(false)
}

enum Role {
  USER
  THEATER_OWNER
}

enum MovieStatus {
  ACTIVE
  REVOKED
}

